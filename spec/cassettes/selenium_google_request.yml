---
http_interactions:
- request:
    method: get
    uri: https://github.com/mozilla/geckodriver/releases/latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - github.com
  response:
    status:
      code: 302
      message: Found
    headers:
      Date:
      - Mon, 23 Mar 2020 17:15:39 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - GitHub.com
      Status:
      - 302 Found
      Vary:
      - X-PJAX, Accept-Encoding, Accept, X-Requested-With
      Location:
      - https://github.com/mozilla/geckodriver/releases/tag/v0.26.0
      Cache-Control:
      - no-cache
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      X-Frame-Options:
      - deny
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      Expect-Ct:
      - max-age=2592000, report-uri="https://api.github.com/_private/browser/errors"
      Content-Security-Policy:
      - 'default-src ''none''; base-uri ''self''; block-all-mixed-content; connect-src
        ''self'' uploads.github.com www.githubstatus.com collector.githubapp.com api.github.com
        www.google-analytics.com github-cloud.s3.amazonaws.com github-production-repository-file-5c1aeb.s3.amazonaws.com
        github-production-upload-manifest-file-7fdce7.s3.amazonaws.com github-production-user-asset-6210df.s3.amazonaws.com
        wss://live.github.com; font-src github.githubassets.com; form-action ''self''
        github.com gist.github.com; frame-ancestors ''none''; frame-src render.githubusercontent.com;
        img-src ''self'' data: github.githubassets.com identicons.github.com collector.githubapp.com
        github-cloud.s3.amazonaws.com *.githubusercontent.com; manifest-src ''self'';
        media-src ''none''; script-src github.githubassets.com; style-src ''unsafe-inline''
        github.githubassets.com'
      Age:
      - '0'
      Set-Cookie:
      - _gh_sess=rFElHDr2rYuDW506juwWj1hM6WHK34wwgngPAdHplFIDWhj1%2BA3gX7%2BKbxrUPhQ9mGw4nQFKc0Dv9KorYIguudZj%2B9w750P2%2BddtEAZqjBBfwVg1I%2BM%2BjHVTmaZ3Q5ASYlogJFjKZk4lXgcbistHAGG42VpsyYELn3GVq9qqL8%2BzoIIpRBcFDZqF3QsufByUmLr4NlE%2FxnRQER6pN0byaLFtkDVmGlOaiMmTcNW2roPXUZA2EdItZl%2FjWyfF%2B0TeTJcIeWRiVtBt7nSDPtWuMw%3D%3D--3LT%2F9sKQAs5r66er--fK%2FkAeixTJQ1jKK%2BJAWxvQ%3D%3D;
        Path=/; HttpOnly; Secure
      - _octo=GH1.1.779529844.1584983739; Path=/; Domain=github.com; Expires=Tue,
        23 Mar 2021 17:15:39 GMT; Secure
      - logged_in=no; Path=/; Domain=github.com; Expires=Tue, 23 Mar 2021 17:15:39
        GMT; HttpOnly; Secure
      Content-Length:
      - '125'
      X-Github-Request-Id:
      - F581:4B36:1FC46:29BC2:5E78EEBB
    body:
      encoding: UTF-8
      string: <html><body>You are being <a href="https://github.com/mozilla/geckodriver/releases/tag/v0.26.0">redirected</a>.</body></html>
    http_version: null
  recorded_at: Mon, 23 Mar 2020 17:15:39 GMT
- request:
    method: get
    uri: https://github.com/mozilla/geckodriver/releases/tag/v0.26.0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - github.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 23 Mar 2020 17:15:40 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - GitHub.com
      Status:
      - 200 OK
      Vary:
      - X-PJAX, Accept-Encoding, Accept, X-Requested-With
      Etag:
      - W/"b6ab997a4d51544fdcb4c932c2441b26"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      X-Frame-Options:
      - deny
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      Expect-Ct:
      - max-age=2592000, report-uri="https://api.github.com/_private/browser/errors"
      Content-Security-Policy:
      - 'default-src ''none''; base-uri ''self''; block-all-mixed-content; connect-src
        ''self'' uploads.github.com www.githubstatus.com collector.githubapp.com api.github.com
        www.google-analytics.com github-cloud.s3.amazonaws.com github-production-repository-file-5c1aeb.s3.amazonaws.com
        github-production-upload-manifest-file-7fdce7.s3.amazonaws.com github-production-user-asset-6210df.s3.amazonaws.com
        wss://live.github.com; font-src github.githubassets.com; form-action ''self''
        github.com gist.github.com; frame-ancestors ''none''; frame-src render.githubusercontent.com;
        img-src ''self'' data: github.githubassets.com identicons.github.com collector.githubapp.com
        github-cloud.s3.amazonaws.com *.githubusercontent.com; manifest-src ''self'';
        media-src ''none''; script-src github.githubassets.com; style-src ''unsafe-inline''
        github.githubassets.com'
      Age:
      - '0'
      Set-Cookie:
      - _gh_sess=TTk8KiijCpw%2FsDLfYMTOP8egXvfI8GSncltO%2B0MMV%2FjEGX0HM0wLVkoaFLQK1lTQSJN2YkxKZZ6F4wg9UkXY6Ta%2F7kTtoJy%2FtDJoWxDRZgTzNHNuklAY7UCyl89BP1AH1sODmRIBAfFz%2Fgbq10FwrCl5uLoi0b0gaZhRaIAZY%2BzjilDzDcEQuYeVslIb0FxGW72QoncY8iOmfG%2Fvq1yuTpxspKCgDf6GnuXxwneAmcRAL9ZWMQc%2F9FLsO7%2Bsc6S79DB%2FjVi85cwYG%2BMFvNZhvQ%3D%3D--tynEedRw5Anr1km1--W65AO7tZS0qO1CbNtPrvZA%3D%3D;
        Path=/; HttpOnly; Secure
      - _octo=GH1.1.1254934773.1584983740; Path=/; Domain=github.com; Expires=Tue,
        23 Mar 2021 17:15:40 GMT; Secure
      - logged_in=no; Path=/; Domain=github.com; Expires=Tue, 23 Mar 2021 17:15:40
        GMT; HttpOnly; Secure
      Accept-Ranges:
      - bytes
      Transfer-Encoding:
      - chunked
      X-Github-Request-Id:
      - F582:0D42:1F679:2945A:5E78EEBC
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Mon, 23 Mar 2020 17:15:40 GMT
recorded_with: VCR 5.1.0
